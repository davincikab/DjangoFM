# Generated by Django 2.2.6 on 2019-10-31 15:32

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FeatureBins',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('size', models.CharField(blank=True, max_length=80, null=True)),
                ('status', models.CharField(blank=True, max_length=80, null=True)),
                ('maintance_field', models.CharField(blank=True, db_column='maintance_', max_length=80, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_bins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureBomaArea',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('fid_field', models.BigIntegerField(blank=True, db_column='fid_', null=True)),
                ('entity', models.CharField(blank=True, max_length=16, null=True)),
                ('layer', models.CharField(blank=True, max_length=254, null=True)),
                ('color', models.BigIntegerField(blank=True, null=True)),
                ('linetype', models.CharField(blank=True, max_length=254, null=True)),
                ('elevation', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('linewt', models.BigIntegerField(blank=True, null=True)),
                ('refname', models.CharField(blank=True, max_length=254, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_boma_area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureBoundary',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_boundary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureBuilding',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('names', models.CharField(blank=True, max_length=254, null=True)),
                ('name', models.CharField(blank=True, max_length=254, null=True)),
                ('area', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('window', models.IntegerField()),
                ('door', models.IntegerField()),
                ('sockets', models.IntegerField()),
                ('department', models.CharField(blank=True, max_length=254, null=True)),
                ('use', models.CharField(blank=True, max_length=254, null=True)),
                ('comm_port', models.IntegerField()),
                ('capacity', models.IntegerField()),
                ('bulbqty', models.IntegerField()),
                ('tap', models.IntegerField()),
                ('maintenace', models.CharField(blank=True, max_length=254, null=True)),
                ('sec_light', models.IntegerField()),
                ('level', models.IntegerField(blank=True, null=True)),
                ('block', models.CharField(blank=True, max_length=254, null=True)),
                ('image', models.ImageField(default='all_rc.jpg', upload_to='building')),
                ('fid', models.BigIntegerField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'Building',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureBushes',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('names', models.CharField(blank=True, max_length=25, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_bushes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureCoffeePlantation',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('names', models.CharField(blank=True, max_length=25, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_coffee_plantation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureCulverts',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('length', models.CharField(blank=True, max_length=80, null=True)),
                ('status', models.CharField(blank=True, max_length=80, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_culverts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureFieldSeats',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(blank=True, null=True)),
                ('capacity', models.CharField(blank=True, max_length=80, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_field_seats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureFootballPitch',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.FloatField(blank=True, null=True)),
                ('names', models.CharField(blank=True, max_length=14, null=True)),
                ('r', models.FloatField(blank=True, null=True)),
                ('g', models.FloatField(blank=True, null=True)),
                ('b', models.FloatField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_football_pitch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureFootpath',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_footpath',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureForest',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('names', models.CharField(blank=True, max_length=25, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_forest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureGates',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('sec_person', models.BigIntegerField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_gates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureGazibo',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('sockets', models.CharField(blank=True, max_length=80, null=True)),
                ('capacity', models.CharField(blank=True, max_length=80, null=True)),
                ('status', models.CharField(blank=True, max_length=80, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_gazibo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureHistoricalTree',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('age', models.CharField(blank=True, max_length=80, null=True)),
                ('height', models.CharField(blank=True, max_length=80, null=True)),
                ('status', models.CharField(blank=True, max_length=80, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_historical_tree',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureKabiruini',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_kabiruini',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureMaizePlantation',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=25, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_maize_plantation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureNyeriforest',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_nyeriforest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureParking',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('names', models.CharField(blank=True, max_length=20, null=True)),
                ('spots', models.SmallIntegerField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_parking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeaturePonds',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('names', models.CharField(blank=True, max_length=25, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_ponds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureRds',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('objectid', models.BigIntegerField(blank=True, null=True)),
                ('shape_leng', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('lntype', models.BigIntegerField(blank=True, null=True)),
                ('leftln_fid', models.BigIntegerField(blank=True, null=True)),
                ('rightln_fi', models.BigIntegerField(blank=True, null=True)),
                ('surface', models.CharField(blank=True, max_length=254, null=True)),
                ('walk_speed', models.BigIntegerField(blank=True, null=True)),
                ('cycle_spee', models.BigIntegerField(blank=True, null=True)),
                ('distance', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('way', models.BigIntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=254, null=True)),
                ('id', models.BigIntegerField(blank=True, null=True)),
                ('drive_spee', models.BigIntegerField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_rds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureSciencepark',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('oid_field', models.IntegerField(blank=True, db_column='oid_', null=True)),
                ('name', models.CharField(blank=True, max_length=254, null=True)),
                ('folderpath', models.CharField(blank=True, max_length=254, null=True)),
                ('symbolid', models.IntegerField(blank=True, null=True)),
                ('altmode', models.SmallIntegerField(blank=True, null=True)),
                ('base', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('clamped', models.SmallIntegerField(blank=True, null=True)),
                ('extruded', models.SmallIntegerField(blank=True, null=True)),
                ('snippet', models.CharField(blank=True, max_length=254, null=True)),
                ('popupinfo', models.CharField(blank=True, max_length=254, null=True)),
                ('shape_leng', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('shape_area', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('names', models.CharField(blank=True, max_length=25, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_sciencepark',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureScpblocks',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('area_ha', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('use', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(blank=True, max_length=80, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_scpblocks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureScpRoad',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('entity', models.CharField(blank=True, max_length=16, null=True)),
                ('layer', models.CharField(blank=True, max_length=254, null=True)),
                ('color', models.BigIntegerField(blank=True, null=True)),
                ('refname', models.CharField(blank=True, max_length=254, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_scp_road',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureSecurityStations',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('status', models.CharField(blank=True, max_length=80, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_security_stations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureSepticTank',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('area', models.CharField(blank=True, max_length=80, null=True)),
                ('depth', models.CharField(blank=True, max_length=80, null=True)),
                ('status', models.CharField(blank=True, max_length=80, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_septic_tank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureSittingPoints',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_sitting_points',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureStreetLights',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('type', models.CharField(blank=True, max_length=80, null=True)),
                ('height', models.CharField(blank=True, max_length=80, null=True)),
                ('bulb_type', models.CharField(blank=True, max_length=80, null=True)),
                ('block', models.CharField(blank=True, max_length=254, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_street_lights',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureToilets',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('names', models.CharField(blank=True, max_length=20, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_toilets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureWaterPoint',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('type', models.CharField(blank=True, max_length=254, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'feature_water_point',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Road',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('objectid', models.BigIntegerField(blank=True, null=True)),
                ('surface', models.CharField(blank=True, max_length=254, null=True)),
                ('walk_speed', models.BigIntegerField(blank=True, null=True)),
                ('cycle_spee', models.BigIntegerField(blank=True, null=True)),
                ('distance', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('way', models.BigIntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=254, null=True)),
                ('id', models.BigIntegerField(blank=True, null=True)),
                ('drive_spee', models.BigIntegerField(blank=True, null=True)),
                ('source', models.SmallIntegerField(blank=True, null=True)),
                ('target', models.SmallIntegerField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'road',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_code', models.CharField(blank=True, max_length=100, null=True)),
                ('department', models.CharField(blank=True, db_column='Department', max_length=100, null=True)),
                ('unit_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_common', models.CharField(blank=True, max_length=100, null=True)),
                ('course', models.CharField(blank=True, max_length=100, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('semester', models.IntegerField(blank=True, null=True)),
                ('student_count', models.CharField(blank=True, max_length=100, null=True)),
                ('lecturer', models.CharField(blank=True, max_length=100, null=True)),
                ('lecture_cellphone', models.CharField(blank=True, max_length=100, null=True)),
                ('lecture_hours', models.IntegerField(blank=True, null=True)),
                ('tutorial_hours', models.IntegerField(blank=True, null=True)),
                ('practical_hours', models.IntegerField(blank=True, db_column='practical hours', null=True)),
                ('is_field_practical', models.CharField(blank=True, max_length=100, null=True)),
                ('day_allocated', models.CharField(blank=True, max_length=100, null=True)),
                ('time_allocated', models.CharField(blank=True, max_length=100, null=True)),
                ('room_allocated', models.CharField(blank=True, max_length=100, null=True)),
                ('practical_time', models.CharField(blank=True, max_length=100, null=True)),
                ('practical_venue', models.CharField(blank=True, max_length=100, null=True)),
                ('practical_day', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'timetable',
                'managed': False,
            },
        ),
    ]
